rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* ─────────── helpers ─────────── */
    function isSignedIn() {
      return request.auth != null && request.auth.uid != null;
    }
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }
    // Only allow clients to touch benign profile prefs on /users/{uid}
    function userUpdateIsSafe() {
      // keys the client is allowed to change on their user doc
      return request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly([
          'email',
          'platform',
          'preferredRecipeLocale'
        ]);
    }

    /* ─────────── per-user space ─────────── */
    match /users/{userId} {

      // Read own user doc
      allow get, list: if isOwner(userId);

      // Create own doc (backend normally creates this, but keep for first sign-in)
      allow create: if isOwner(userId);

      // Delete own doc (you may want to keep this backend-only; leave enabled if UI supports it)
      allow delete: if isOwner(userId);

      // Client may update only allowlisted keys
      allow update: if isOwner(userId) && userUpdateIsSafe();

      // Admin can update anything on user doc
      allow update: if isAdmin();

      /* ── recipes (CRUD by owner) ── */
      match /recipes/{recipeId} {
        allow get, list, create, update, delete: if isOwner(userId);
      }

      /* ── custom categories (CRUD by owner) ── */
      match /categories/{categoryId} {
        allow get, list, create, update, delete: if isOwner(userId);
      }

      /* ── optional translated/alt content (CRUD by owner) ── */
      match /translations/{translationId} {
        allow get, list, create, update, delete: if isOwner(userId);
      }

      /* ── usage counters (backend writes only; client read‑only) ── */
      match /aiUsage/{docId} {
        allow get, list: if isOwner(userId);
        allow create, update, delete: if false;
      }
      match /translationUsage/{docId} {
        allow get, list: if isOwner(userId);
        allow create, update, delete: if false;
      }
      match /imageUsage/{docId} {
        allow get, list: if isOwner(userId);
        allow create, update, delete: if false;
      }
    }

    /* ─────────── write-only analytics (from signed-in clients) ─────────── */
    match /analytics/{docId} {
      // Allow creating new events, but nothing else
      allow create: if isSignedIn();
      allow get, list, update, delete: if false;
    }

    /* (add other top-level collections here as needed; default deny applies) */
  }
}