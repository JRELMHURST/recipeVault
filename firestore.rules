rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 🔐 Per-user documents
    match /users/{userId} {
      allow read, list, create, delete: if request.auth != null && request.auth.uid == userId;

      allow update: if request.auth != null && request.auth.uid == userId &&
        (
          // ✅ Allow updates only to specific fields (safe changes)
          request.resource.data.diff(resource.data).affectedKeys().hasOnly([
            'entitlementId',
            'tier',
            'superUser',
            'lastLogin',
            'email',
            'createdAt',
            'platform',
            'usage'
          ]) ||

          // ✅ Allow updates if 'tier' is not being changed
          !request.resource.data.diff(resource.data).affectedKeys().hasAny(['tier']) ||

          // ✅ Allow full updates if user is admin
          request.auth.token.admin == true
        );

      // 📦 Recipes stored in user's vault
      match /recipes/{recipeId} {
        allow read, list, write: if request.auth != null && request.auth.uid == userId;
      }

      // 🏷️ Custom categories for filtering recipes
      match /categories/{categoryId} {
        allow read, list, write: if request.auth != null && request.auth.uid == userId;
      }

      // 📈 AI usage quota (read-only from app)
      match /aiUsage/{docId} {
        allow read, list: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }

      // 🌍 Translation usage quota (read-only from app)
      match /translationUsage/{docId} {
        allow read, list: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }

      // 🗑️ Hide global recipes per user (soft delete)
      match /hiddenGlobalRecipes/{recipeId} {
        allow read, list, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // 🌍 Publicly available global recipes
    match /global_recipes/{recipeId} {
      allow read, list: if request.auth != null && request.auth.uid != null;
      allow write: if false;
    }

    // 📊 Event analytics (write-only logging)
    match /analytics/{docId} {
      allow create: if request.auth != null && request.auth.uid != null;
      allow read, update, delete: if false;
    }
  }
}