rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ── Per-user root documents ─────────────────────────────────────────────
    match /users/{userId} {
      // Only the authenticated owner can read their profile
      allow read, list, create, delete: if request.auth != null && request.auth.uid == userId;

      // 🔒 Updates: allow only safe keys; tier/productId/superUser/createdAt are server-controlled
      allow update: if request.auth != null && request.auth.uid == userId &&
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly([
            'lastLogin',
            'email',
            'platform',
            'usage'
          ]) ||
          request.auth.token.admin == true
        );

      // ── User-owned subcollections ─────────────────────────────────────────
      match /recipes/{recipeId} {
        allow read, list, write: if request.auth != null && request.auth.uid == userId;
      }

      match /categories/{categoryId} {
        allow read, list, write: if request.auth != null && request.auth.uid == userId;
      }

      // Quota collections (read-only from client)
      match /aiUsage/{docId} {
        allow read, list: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }
      match /translationUsage/{docId} {
        allow read, list: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }

      // Soft-delete per-user hidden global recipes
      match /hiddenGlobalRecipes/{recipeId} {
        allow read, list, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // ── Global/public docs ──────────────────────────────────────────────────
    // 🌍 Publicly available global recipes
    match /global_recipes/{recipeId} {
      allow read, list: if true;  // 🔓 fully public read
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    // 📊 Event analytics (write-only logging)
    match /analytics/{docId} {
      allow create: if request.auth != null && request.auth.uid != null;
      allow read, update, delete: if false;
    }
  }
}