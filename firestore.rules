rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create, delete: if request.auth != null && request.auth.uid == userId;

      allow update: if request.auth != null && request.auth.uid == userId &&
        (
          request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly([
              'entitlementId',
              'lastLogin',
              'trialActive',
              'tier',
              'superUser',
              'email',
              'createdAt',
              'platform'
            ]) ||

          !request.resource.data.diff(resource.data).affectedKeys()
            .hasAny(['tier']) ||

          request.auth.token.admin == true
        );

      match /recipes/{recipeId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /categories/{categoryId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /translationUsage/{docId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }

      match /aiUsage/{docId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }

      match /hiddenGlobalRecipes/{recipeId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    match /global_recipes/{recipeId} {
      allow read: if request.auth != null;
      allow write: if false;
    }

    match /analytics/{docId} {
      allow create: if request.auth != null;
      allow read, update, delete: if false;
    }
  }
}