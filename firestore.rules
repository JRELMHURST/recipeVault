rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // üîê USER ROOT DOC (e.g. /users/{userId})
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create, delete: if request.auth != null && request.auth.uid == userId;

      allow update: if request.auth != null && request.auth.uid == userId &&
        (
          request.resource.data.diff(resource.data).affectedKeys()
            .hasOnly(['entitlementId', 'lastLogin', 'trialActive', 'tier']) ||

          !request.resource.data.diff(resource.data).affectedKeys()
            .hasAny(['tier']) ||

          request.auth.token.admin == true
        );

      // Subcollections
      match /recipes/{recipeId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /categories/{categoryId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /translationUsage/{docId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }

      match /aiUsage/{docId} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }

      // üïµÔ∏è Soft-deleted global recipes per user
      match /hiddenGlobalRecipes/{recipeId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // üåç Public global recipes
    match /global_recipes/{recipeId} {
      allow read: if request.auth != null;
      allow write: if false;
    }
  }
}