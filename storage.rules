rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    /* ─────────── helpers ─────────── */
    function isSignedIn() {
      return request.auth != null && request.auth.uid != null;
    }
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    function isImageUpload() {
      return request.resource.contentType.matches('image/.*')
        && request.resource.name.matches('.*\\.(png|jpg|jpeg|webp)$');
    }

    function sizeUnder(limitMB) {
      return request.resource.size < limitMB * 1024 * 1024;
    }

    /* ─────────── per-user uploads ─────────── */
    match /users/{userId}/{allPaths=**} {
      // Owner can read anything under their folder
      allow read: if isOwner(userId);

      // Owner can write images up to 10MB
      allow write: if isOwner(userId) && isImageUpload() && sizeUnder(10);
    }

    /* ─────────── public/shared images ─────────── */
    match /shared_recipes/{allPaths=**} {
      allow read: if true;
      allow write: if isAdmin() && isImageUpload() && sizeUnder(10);
    }

    /* ─────────── default deny ─────────── */
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}