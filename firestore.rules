rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 🔐 Per-user documents
    match /users/{userId} {
      // User can always read their own doc
      allow read, list: if request.auth != null && request.auth.uid == userId;

      // User can create their own doc on signup
      allow create: if request.auth != null && request.auth.uid == userId;

      // User can delete their own doc
      allow delete: if request.auth != null && request.auth.uid == userId;

      // ⚠️ Client updates: only safe fields (email, platform)
      allow update: if request.auth != null && request.auth.uid == userId &&
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['email', 'platform']);

      // 👑 Admin override: can update anything
      allow update: if request.auth.token.admin == true;

      // 📦 Recipes stored in user's vault
      match /recipes/{recipeId} {
        allow read, list, create, update, delete: if request.auth != null && request.auth.uid == userId;
      }

      // 🏷️ Custom categories for filtering recipes
      match /categories/{categoryId} {
        allow read, list, create, update, delete: if request.auth != null && request.auth.uid == userId;
      }

      // 📜 Translated recipe cards (optional)
      match /translations/{translationId} {
        allow read, list, create, update, delete: if request.auth != null && request.auth.uid == userId;
      }

      // 📈 AI usage quota (read-only from app, backend writes only)
      match /aiUsage/{docId} {
        allow read, list: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }

      // 🌍 Translation usage quota (read-only from app, backend writes only)
      match /translationUsage/{docId} {
        allow read, list: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }

      // 🖼️ Image usage quota (read-only from app, backend writes only)
      match /imageUsage/{docId} {
        allow read, list: if request.auth != null && request.auth.uid == userId;
        allow write: if false;
      }
    }

    // 📊 Event analytics (write-only logging)
    match /analytics/{docId} {
      allow create: if request.auth != null && request.auth.uid != null;
      allow read, update, delete: if false;
    }
  }
}